Vimos diversos conceitos relacionados às práticas de programação do dia a dia:
    criar um projeto com Spring, consumir APIs, trabalhar na serialização e
    desserialização de dados, utilizar dependências em um projeto e utilizar Generics.

Para fixar esses conteúdos, propomos uma lista de exercícios para você relembrar
as informações mais importantes e colocar tudo em prática. Vamos lá?

1 - Crie um novo projeto com Spring Boot, usando o site start.spring.io.
    Esse projeto será o contador, e funcionará na linha de comando.
    Você deve pedir para um usuário digitar um número e depois imprimir
    na tela uma contagem de 1 até o número digitado pelo usuário.

Por exemplo, se o usuário digitar 5, deve aparecer no terminal 1 2 3 4 5 .

2 - Suponha que decidimos mudar de ideia e utilizar novamente a biblioteca Gson
    no nosso projeto ScreenMatch. Agora que estamos trabalhando com o Maven,
    os passos para adicionar a biblioteca são diferentes do que já foi feito antes.
    Explique quais passos você iria realizar nesse caso.

3 - Agora iremos trabalhar com serialização e desserialização. Para isso, você pode
    reaproveitar seu projeto do exercício 1. Adicione a dependência do Jackson ao seu pom.xml,
    pois iremos utilizá-la bastante nos próximos exercícios. Também crie uma classe Tarefa,
    com os seguintes atributos:

    public class Tarefa {
        private String descricao;
        private boolean concluida;
        private String pessoaResponsavel;

        // Construtores, getters e toString
    }

Para que o Jackson funcione corretamente, é importante que sua classe tenha todos os getters
e um construtor padrão. Também é legal criar um método toString().

4 - Lembre-se: serializar um objeto é conseguir representá-lo de alguma forma em um arquivo.
    Aqui, você deve instanciar um objeto do tipo Tarefa e fazer com que o conteúdo do objeto
    vá para o arquivo tarefa.json. Para isso, utilize o Jackson para te auxiliar na tarefa.
    Observação: para criar novos arquivos, podemos utilizar new File("tarefa.json").

5 - Agora, você fará o oposto da atividade anterior: a desserialização de um arquivo,
    que é ler os valores de um arquivo específico e transformar em um objeto.
    Leia o conteúdo do arquivo tarefa.json, produzido no exercício anterior,
    e o transforme em um objeto do tipo Tarefa.
    Exiba o conteúdo do objeto na tela.

6 - Vamos criar objetos genéricos. Imagine que você trabalha em um site que oferece várias coisas:
    venda de produtos, serviços de instalação desses produtos e assinatura de alguns itens.
    Todas essas coisas têm algo em comum: podem ser avaliadas pelos consumidores.
    Crie uma classe genérica de Avaliação, de modo que possamos ter, por exemplo:
    Avaliacao<Servico>, Avaliacao<Produto> e Avaliacao<Assinatura>.
    Essa classe deve ter o item genérico de avaliação, a nota e um comentário sobre a nota.

Tendo criado a classe genérica, você também pode criar um método para calcular as médias das notas recebidas,
independente do tipo de item avaliado.